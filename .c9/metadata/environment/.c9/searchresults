{"changed":true,"filter":false,"title":"Search Results","tooltip":"/.c9/searchresults","value":"Searching for \u0001navbar\u0001 in\u0001/\u0001 (Found 10 matches in 1 file)\n\n/src/views/layout.jade:\n\t25:       nav.navbar.navbar-default\n\t27:           div.navbar-header\n\t28:             button.navbar-toggle.collapsed(type='button', data-toggle='collapse', data-target='#navbar')\n\t33:             div.navbar-brand\n\t36:           div#navbar.collapse.navbar-collapse\n\t37:             ul.nav.navbar-nav.navbar-right\n\nFound 10 matches in 1 file \n\n","undoManager":{"mark":-2,"position":2,"stack":[[{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"insert","lines":[" "],"id":1}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"remove","lines":[" "],"id":2},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001mockbin\u0001 in\u0001/\u0001","",""]},{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["/app.json:",""]},{"start":{"row":3,"column":0},"end":{"row":7,"column":0},"action":"insert","lines":["\t2:   \"name\": \"mockbin\",","\t4:   \"repository\": \"https://github.com/rdenhaanalonso/heroku-mockbin\",","\t5:   \"website\": \"http://mockbin.org/\",","",""]},{"start":{"row":7,"column":0},"end":{"row":8,"column":0},"action":"insert","lines":["/CONTRIBUTING.md:",""]},{"start":{"row":8,"column":0},"end":{"row":10,"column":0},"action":"insert","lines":["\t96:    git remote add upstream https://github.com/Mashape/mockbin.git","",""]},{"start":{"row":10,"column":0},"end":{"row":11,"column":0},"action":"insert","lines":["/Dockerfile:",""]},{"start":{"row":11,"column":0},"end":{"row":13,"column":0},"action":"insert","lines":["\t3: RUN npm config set mockbin:redis redis://redis:6379","",""]},{"start":{"row":13,"column":0},"end":{"row":14,"column":0},"action":"insert","lines":["/package.json:",""]},{"start":{"row":14,"column":0},"end":{"row":20,"column":0},"action":"insert","lines":["\t3:   \"name\": \"mockbin\",","\t6:   \"homepage\": \"https://mockbin.org/\",","\t9:     \"url\": \"git+https://github.com/Mashape/mockbin.git\"","\t13:   \"bin\": \"bin/mockbin\",","\t37:     \"url\": \"https://github.com/Mashape/mockbin/issues\"","",""]},{"start":{"row":20,"column":0},"end":{"row":21,"column":0},"action":"insert","lines":["/README.md:",""]},{"start":{"row":21,"column":0},"end":{"row":44,"column":0},"action":"insert","lines":["\t1: # Mockbin [![version][npm-version]][npm-url] [![License][npm-license]][license-url]","\t10: Mockbin is used internally and maintained by [Mashape](https://github.com/Mashape), who also maintain the open-source API Gateway [Kong](https://github.com/Mashape/kong). ","\t35: npm install mockbin","\t58: you will need to tell *mockbin* where Redis is:","\t61: npm config set mockbin:redis redis://127.0.0.1:6379","\t67: npm config set mockbin:port 8001","\t83:   Usage: mockbin [options]","\t97: Read the full API documentation, please review the [API Docs](https://github.com/Mashape/mockbin/tree/master/docs).","\t115: [license-url]: https://github.com/Mashape/mockbin/blob/master/LICENSE","\t117: [travis-url]: https://travis-ci.org/Mashape/mockbin","\t118: [travis-image]: https://img.shields.io/travis/Mashape/mockbin.svg?style=flat-square","\t120: [npm-url]: https://www.npmjs.com/package/mockbin","\t121: [npm-license]: https://img.shields.io/npm/l/mockbin.svg?style=flat-square","\t122: [npm-version]: https://img.shields.io/npm/v/mockbin.svg?style=flat-square","\t123: [npm-downloads]: https://img.shields.io/npm/dm/mockbin.svg?style=flat-square","\t125: [codeclimate-url]: https://codeclimate.com/github/Mashape/mockbin","\t126: [codeclimate-quality]: https://img.shields.io/codeclimate/github/Mashape/mockbin.svg?style=flat-square","\t127: [codeclimate-coverage]: https://img.shields.io/codeclimate/coverage/github/Mashape/mockbin.svg?style=flat-square","\t129: [david-url]: https://david-dm.org/Mashape/mockbin","\t130: [david-image]: https://img.shields.io/david/Mashape/mockbin.svg?style=flat-square","\t133: [docker-url]: https://heroku.com/deploy?template=https://github.com/rdenhaanalonso/heroku-mockbin","\t136: [gitter-url]: https://gitter.im/Mashape/mockbin","",""]},{"start":{"row":44,"column":0},"end":{"row":45,"column":0},"action":"insert","lines":["/docs/index.md:",""]},{"start":{"row":45,"column":0},"end":{"row":56,"column":0},"action":"insert","lines":["\t9: curl mockbin.org/request","\t12: curl -X PATCH mockbin.org/request","\t15: curl -X SEARCH mockbin.org/request","\t22: curl -X POST -H \"X-HTTP-Method-Override: HELLO\" mockbin.org/request","\t27: mockbin is able to respond in a number of formats: JSON, YAML, XML, HTML. The response varies based on `Accept` header:","\t31: curl mockbin.org/request -H \"Accept: application/json\" ","\t34: curl mockbin.org/request -H \"Accept: application/yaml\" ","\t37: curl mockbin.org/request -H \"Accept: application/xml\" ","\t40: curl mockbin.org/request -H \"Accept: text/html\" ","\t48: curl mockbin.org/request?__callback=myfunc -H \"Accept: application/json\"","",""]},{"start":{"row":56,"column":0},"end":{"row":57,"column":0},"action":"insert","lines":["/docs/install.md:",""]},{"start":{"row":57,"column":0},"end":{"row":64,"column":0},"action":"insert","lines":["\t10: git clone https://github.com/Mashape/mockbin.git ./mockbin","\t11: cd mockbin","\t17: npm install mockbin","\t25: docker build -t mockbin .","\t33: docker run -d --name mockbin_redis redis","\t34: docker run -d -p 8080:8080 --link mockbin_redis:redis mashape/mockbin","",""]},{"start":{"row":64,"column":0},"end":{"row":65,"column":0},"action":"insert","lines":["/docs/api/bins.md:",""]},{"start":{"row":65,"column":0},"end":{"row":71,"column":0},"action":"insert","lines":["\t26: > Host: mockbin.org","\t104: > Host: mockbin.org","\t185: > Host: mockbin.org","\t215: > Host: mockbin.org","\t228: >       \"name\": \"mockbin.org\", ","",""]},{"start":{"row":71,"column":0},"end":{"row":72,"column":0},"action":"insert","lines":["/docs/api/utility.md:",""]},{"start":{"row":72,"column":0},"end":{"row":92,"column":0},"action":"insert","lines":["\t15: > Host: mockbin.org","\t42: > Host: mockbin.org","\t139: > Host: mockbin.org","\t160: >       \"name\": \"mockbin.org\", ","\t251: > Host: mockbin.org","\t278: > Host: mockbin.org","\t312: > Host: mockbin.org","\t343: > Host: mockbin.org","\t367: >       \"value\": \"mockbin.org\"","\t388: > Host: mockbin.org","\t413: > Host: mockbin.org","\t443: > Host: mockbin.org","\t483: > Host: mockbin.org","\t525: > Host: mockbin.org","\t548: > Host: mockbin.org","\t572: > Host: mockbin.org","\t630: > Host: mockbin.org","\t660: > Host: mockbin.org","\t689: > Host: mockbin.org","",""]},{"start":{"row":92,"column":0},"end":{"row":93,"column":0},"action":"insert","lines":["/lib/index.js:",""]},{"start":{"row":93,"column":0},"end":{"row":95,"column":0},"action":"insert","lines":["\t3: var debug = require('debug-log')('mockbin')","",""]},{"start":{"row":95,"column":0},"end":{"row":96,"column":0},"action":"insert","lines":["/lib/utils.js:",""]},{"start":{"row":96,"column":0},"end":{"row":98,"column":0},"action":"insert","lines":["\t43:           name: 'mockbin.com',","",""]},{"start":{"row":98,"column":0},"end":{"row":99,"column":0},"action":"insert","lines":["/lib/middleware/error-handler.js:",""]},{"start":{"row":99,"column":0},"end":{"row":101,"column":0},"action":"insert","lines":["\t3: var debug = require('debug-log')('mockbin')","",""]},{"start":{"row":101,"column":0},"end":{"row":102,"column":0},"action":"insert","lines":["/lib/middleware/powered-by.js:",""]},{"start":{"row":102,"column":0},"end":{"row":104,"column":0},"action":"insert","lines":["\t6:   res.set('X-Powered-By', 'mockbin')","",""]},{"start":{"row":104,"column":0},"end":{"row":105,"column":0},"action":"insert","lines":["/lib/routes/bins.js:",""]},{"start":{"row":105,"column":0},"end":{"row":107,"column":0},"action":"insert","lines":["\t3: var debug = require('debug-log')('mockbin')","",""]},{"start":{"row":107,"column":0},"end":{"row":108,"column":0},"action":"insert","lines":["/lib/routes/bins/create.js:",""]},{"start":{"row":108,"column":0},"end":{"row":110,"column":0},"action":"insert","lines":["\t3: var debug = require('debug-log')('mockbin')","",""]},{"start":{"row":110,"column":0},"end":{"row":111,"column":0},"action":"insert","lines":["/lib/routes/bins/log.js:",""]},{"start":{"row":111,"column":0},"end":{"row":114,"column":0},"action":"insert","lines":["\t3: var debug = require('debug-log')('mockbin')","\t20:           name: 'mockbin.com',","",""]},{"start":{"row":114,"column":0},"end":{"row":115,"column":0},"action":"insert","lines":["/lib/routes/bins/run.js:",""]},{"start":{"row":115,"column":0},"end":{"row":117,"column":0},"action":"insert","lines":["\t3: var debug = require('debug-log')('mockbin')","",""]},{"start":{"row":117,"column":0},"end":{"row":118,"column":0},"action":"insert","lines":["/lib/routes/bins/sample.js:",""]},{"start":{"row":118,"column":0},"end":{"row":120,"column":0},"action":"insert","lines":["\t3: var debug = require('debug-log')('mockbin')","",""]},{"start":{"row":120,"column":0},"end":{"row":121,"column":0},"action":"insert","lines":["/lib/routes/bins/view.js:",""]},{"start":{"row":121,"column":0},"end":{"row":123,"column":0},"action":"insert","lines":["\t3: var debug = require('debug-log')('mockbin')","",""]},{"start":{"row":123,"column":0},"end":{"row":124,"column":0},"action":"insert","lines":["/src/index.js:",""]},{"start":{"row":124,"column":0},"end":{"row":126,"column":0},"action":"insert","lines":["\t5: var debug = require('debug-log')('mockbin')","",""]},{"start":{"row":126,"column":0},"end":{"row":127,"column":0},"action":"insert","lines":["/src/static/har/echo.json:",""]},{"start":{"row":127,"column":0},"end":{"row":129,"column":0},"action":"insert","lines":["\t3:   \"url\": \"http://mockbin.org/request\",","",""]},{"start":{"row":129,"column":0},"end":{"row":130,"column":0},"action":"insert","lines":["/src/views/layout.jade:",""]},{"start":{"row":130,"column":0},"end":{"row":134,"column":0},"action":"insert","lines":["\t6:     title Mockbin by Mashape","\t34:               a(href='/') mockbin","\t38:               for link, name in [{name: 'Create Bin', href: '/bin/create'}, {name: 'Docs', href: 'https://github.com/Mashape/mockbin/tree/master/docs'}, {name: 'Github', href: 'https://github.com/Mashape/mockbin'}]","",""]},{"start":{"row":134,"column":0},"end":{"row":135,"column":0},"action":"insert","lines":["/test/utils.js:",""]},{"start":{"row":135,"column":0},"end":{"row":140,"column":0},"action":"insert","lines":["\t12:   url: 'http://mockbin.com/',","\t19:   hostname: 'mockbin.com',","\t83:           name: 'mockbin.com',","\t92:             url: 'http://mockbin.com/',","",""]},{"start":{"row":140,"column":0},"end":{"row":141,"column":0},"action":"insert","lines":["/test/http/index.js:",""]},{"start":{"row":141,"column":0},"end":{"row":148,"column":0},"action":"insert","lines":["\t7: var mockbin = require('../../lib')","\t22:   app.use('/', mockbin())","\t92:       'User-Agent': 'mockbin tester'","\t96:       res.body.should.equal('mockbin tester')","\t257:     var req = unirest.get('http://localhost:3000/redirect/308?to=http://mockbin.com/')","\t263:       res.headers.should.containEql({location: 'http://mockbin.com/'})","",""]},{"start":{"row":148,"column":0},"end":{"row":149,"column":0},"action":"insert","lines":["/test/routes/redirect.js:",""]},{"start":{"row":149,"column":0},"end":{"row":154,"column":0},"action":"insert","lines":["\t66:         to: 'http://mockbin.org'","\t77:     res.target.should.equal('/redirect/308/2?to=http://mockbin.org')","\t85:         to: 'http://mockbin.org'","\t96:     res.target.should.equal('http://mockbin.org')","",""]},{"start":{"row":154,"column":0},"end":{"row":155,"column":0},"action":"insert","lines":["Found 105 matches in 25 files ",""]},{"start":{"row":155,"column":0},"end":{"row":156,"column":0},"action":"insert","lines":["",""]},{"start":{"row":0,"column":29},"end":{"row":0,"column":61},"action":"insert","lines":[" (Found 105 matches in 25 files)"]}],[{"start":{"row":0,"column":0},"end":{"row":156,"column":0},"action":"remove","lines":["Searching for \u0001mockbin\u0001 in\u0001/\u0001 (Found 105 matches in 25 files)","","/app.json:","\t2:   \"name\": \"mockbin\",","\t4:   \"repository\": \"https://github.com/rdenhaanalonso/heroku-mockbin\",","\t5:   \"website\": \"http://mockbin.org/\",","","/CONTRIBUTING.md:","\t96:    git remote add upstream https://github.com/Mashape/mockbin.git","","/Dockerfile:","\t3: RUN npm config set mockbin:redis redis://redis:6379","","/package.json:","\t3:   \"name\": \"mockbin\",","\t6:   \"homepage\": \"https://mockbin.org/\",","\t9:     \"url\": \"git+https://github.com/Mashape/mockbin.git\"","\t13:   \"bin\": \"bin/mockbin\",","\t37:     \"url\": \"https://github.com/Mashape/mockbin/issues\"","","/README.md:","\t1: # Mockbin [![version][npm-version]][npm-url] [![License][npm-license]][license-url]","\t10: Mockbin is used internally and maintained by [Mashape](https://github.com/Mashape), who also maintain the open-source API Gateway [Kong](https://github.com/Mashape/kong). ","\t35: npm install mockbin","\t58: you will need to tell *mockbin* where Redis is:","\t61: npm config set mockbin:redis redis://127.0.0.1:6379","\t67: npm config set mockbin:port 8001","\t83:   Usage: mockbin [options]","\t97: Read the full API documentation, please review the [API Docs](https://github.com/Mashape/mockbin/tree/master/docs).","\t115: [license-url]: https://github.com/Mashape/mockbin/blob/master/LICENSE","\t117: [travis-url]: https://travis-ci.org/Mashape/mockbin","\t118: [travis-image]: https://img.shields.io/travis/Mashape/mockbin.svg?style=flat-square","\t120: [npm-url]: https://www.npmjs.com/package/mockbin","\t121: [npm-license]: https://img.shields.io/npm/l/mockbin.svg?style=flat-square","\t122: [npm-version]: https://img.shields.io/npm/v/mockbin.svg?style=flat-square","\t123: [npm-downloads]: https://img.shields.io/npm/dm/mockbin.svg?style=flat-square","\t125: [codeclimate-url]: https://codeclimate.com/github/Mashape/mockbin","\t126: [codeclimate-quality]: https://img.shields.io/codeclimate/github/Mashape/mockbin.svg?style=flat-square","\t127: [codeclimate-coverage]: https://img.shields.io/codeclimate/coverage/github/Mashape/mockbin.svg?style=flat-square","\t129: [david-url]: https://david-dm.org/Mashape/mockbin","\t130: [david-image]: https://img.shields.io/david/Mashape/mockbin.svg?style=flat-square","\t133: [docker-url]: https://heroku.com/deploy?template=https://github.com/rdenhaanalonso/heroku-mockbin","\t136: [gitter-url]: https://gitter.im/Mashape/mockbin","","/docs/index.md:","\t9: curl mockbin.org/request","\t12: curl -X PATCH mockbin.org/request","\t15: curl -X SEARCH mockbin.org/request","\t22: curl -X POST -H \"X-HTTP-Method-Override: HELLO\" mockbin.org/request","\t27: mockbin is able to respond in a number of formats: JSON, YAML, XML, HTML. The response varies based on `Accept` header:","\t31: curl mockbin.org/request -H \"Accept: application/json\" ","\t34: curl mockbin.org/request -H \"Accept: application/yaml\" ","\t37: curl mockbin.org/request -H \"Accept: application/xml\" ","\t40: curl mockbin.org/request -H \"Accept: text/html\" ","\t48: curl mockbin.org/request?__callback=myfunc -H \"Accept: application/json\"","","/docs/install.md:","\t10: git clone https://github.com/Mashape/mockbin.git ./mockbin","\t11: cd mockbin","\t17: npm install mockbin","\t25: docker build -t mockbin .","\t33: docker run -d --name mockbin_redis redis","\t34: docker run -d -p 8080:8080 --link mockbin_redis:redis mashape/mockbin","","/docs/api/bins.md:","\t26: > Host: mockbin.org","\t104: > Host: mockbin.org","\t185: > Host: mockbin.org","\t215: > Host: mockbin.org","\t228: >       \"name\": \"mockbin.org\", ","","/docs/api/utility.md:","\t15: > Host: mockbin.org","\t42: > Host: mockbin.org","\t139: > Host: mockbin.org","\t160: >       \"name\": \"mockbin.org\", ","\t251: > Host: mockbin.org","\t278: > Host: mockbin.org","\t312: > Host: mockbin.org","\t343: > Host: mockbin.org","\t367: >       \"value\": \"mockbin.org\"","\t388: > Host: mockbin.org","\t413: > Host: mockbin.org","\t443: > Host: mockbin.org","\t483: > Host: mockbin.org","\t525: > Host: mockbin.org","\t548: > Host: mockbin.org","\t572: > Host: mockbin.org","\t630: > Host: mockbin.org","\t660: > Host: mockbin.org","\t689: > Host: mockbin.org","","/lib/index.js:","\t3: var debug = require('debug-log')('mockbin')","","/lib/utils.js:","\t43:           name: 'mockbin.com',","","/lib/middleware/error-handler.js:","\t3: var debug = require('debug-log')('mockbin')","","/lib/middleware/powered-by.js:","\t6:   res.set('X-Powered-By', 'mockbin')","","/lib/routes/bins.js:","\t3: var debug = require('debug-log')('mockbin')","","/lib/routes/bins/create.js:","\t3: var debug = require('debug-log')('mockbin')","","/lib/routes/bins/log.js:","\t3: var debug = require('debug-log')('mockbin')","\t20:           name: 'mockbin.com',","","/lib/routes/bins/run.js:","\t3: var debug = require('debug-log')('mockbin')","","/lib/routes/bins/sample.js:","\t3: var debug = require('debug-log')('mockbin')","","/lib/routes/bins/view.js:","\t3: var debug = require('debug-log')('mockbin')","","/src/index.js:","\t5: var debug = require('debug-log')('mockbin')","","/src/static/har/echo.json:","\t3:   \"url\": \"http://mockbin.org/request\",","","/src/views/layout.jade:","\t6:     title Mockbin by Mashape","\t34:               a(href='/') mockbin","\t38:               for link, name in [{name: 'Create Bin', href: '/bin/create'}, {name: 'Docs', href: 'https://github.com/Mashape/mockbin/tree/master/docs'}, {name: 'Github', href: 'https://github.com/Mashape/mockbin'}]","","/test/utils.js:","\t12:   url: 'http://mockbin.com/',","\t19:   hostname: 'mockbin.com',","\t83:           name: 'mockbin.com',","\t92:             url: 'http://mockbin.com/',","","/test/http/index.js:","\t7: var mockbin = require('../../lib')","\t22:   app.use('/', mockbin())","\t92:       'User-Agent': 'mockbin tester'","\t96:       res.body.should.equal('mockbin tester')","\t257:     var req = unirest.get('http://localhost:3000/redirect/308?to=http://mockbin.com/')","\t263:       res.headers.should.containEql({location: 'http://mockbin.com/'})","","/test/routes/redirect.js:","\t66:         to: 'http://mockbin.org'","\t77:     res.target.should.equal('/redirect/308/2?to=http://mockbin.org')","\t85:         to: 'http://mockbin.org'","\t96:     res.target.should.equal('http://mockbin.org')","","Found 105 matches in 25 files ","",""],"id":3},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001navbar\u0001 in\u0001/\u0001","",""]},{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["/src/views/layout.jade:",""]},{"start":{"row":3,"column":0},"end":{"row":10,"column":0},"action":"insert","lines":["\t25:       nav.navbar.navbar-default","\t27:           div.navbar-header","\t28:             button.navbar-toggle.collapsed(type='button', data-toggle='collapse', data-target='#navbar')","\t33:             div.navbar-brand","\t36:           div#navbar.collapse.navbar-collapse","\t37:             ul.nav.navbar-nav.navbar-right","",""]},{"start":{"row":10,"column":0},"end":{"row":11,"column":0},"action":"insert","lines":["Found 10 matches in 1 file ",""]},{"start":{"row":11,"column":0},"end":{"row":12,"column":0},"action":"insert","lines":["",""]},{"start":{"row":0,"column":28},"end":{"row":0,"column":57},"action":"insert","lines":[" (Found 10 matches in 1 file)"]}]]},"ace":{"folds":[],"customSyntax":"c9search","scrolltop":0,"scrollleft":0,"selection":{"start":{"row":2,"column":11},"end":{"row":2,"column":17},"isBackwards":false},"options":{"tabSize":4,"useSoftTabs":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1514285467273}